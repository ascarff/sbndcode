#
# File:    standard_reco_sbnd_basic.fcl
# Purpose: run basic reconstruction with SBND detector
# Version: 1.3
#
# Changes:
# 20160621 (petrillo@fnal.gov) [v1.1]
#   updated with sbndcode services
# 20160929 (petrillo@fnal.gov) [v1.2]
#   replace tracker from TrackKalman3D to PMTrackMaker
#
# 20161223 (petrillo@fnal.gov) [v1.3]
#   - adopted shared root output configuration
#

#
# service configuration
#

#include "services_sbnd.fcl"
#include "messages_sbnd.fcl"
#include "sam_sbnd.fcl"
#include "larfft_sbnd.fcl"
#include "signalservices_sbnd.fcl"

#
# module configuration
#

#include "caldata_sbnd.fcl"
#include "hitfindermodules_sbnd.fcl"
#include "cluster_sbnd.fcl"
#include "trackfindermodules_sbnd.fcl"
#include "calorimetry_sbnd.fcl"
#include "showerfindermodules_sbnd.fcl"
#include "databaseutil_sbnd.fcl"
##include "opticaldetectormodules_sbnd.fcl"
#include "ophitfinder_sbnd.fcl"
#include "vertexfindermodules.fcl"
#include "pandoramodules_sbnd.fcl"
##include "triggeralgo_service.fcl"
##include "photpropservices_sbnd.fcl"
#include "particleid_sbnd.fcl"
#include "rootoutput_sbnd.fcl"

#include "crtsimhitproducer_sbnd.fcl"
##include "crttzeroproducer_sbnd.fcl"
#include "crttrackproducer_sbnd.fcl"
#include "crtt0matchingalg_sbnd.fcl"
#include "crttrackmatchingalg_sbnd.fcl"

#Legacy code in EMSHOWER uses the backtracker to be removed after the SBN Workshop March 2018  
#include "backtrackerservice.fcl" 
#include "particleinventoryservice.fcl"

process_name: RecoNew

services:
{
  # Load the service that manages root files for histograms.
  TFileService:              { fileName: @local::sbnd_tfileoutput.fileName }
  message:                   @local::sbnd_message_services_prod # from messages_sbnd.fcl
  FileCatalogMetadata:       @local::sbnd_file_catalog_mc       # from sam_sbnd.fcl
                             @table::sbnd_services              # from services_sbnd.fcl
                             @table::sbnd_random_services       # from services_sbnd.fcl; required by fuzzyCluster
  LArFFT:                    @local::sbnd_larfft
  SignalShapingServiceSBND: @local::sbnd_signalshapingservice  # from signalservices_sbnd.fcl

  #Legacy code in EMSHOWER uses the backtracker to be removed after the SBN Workshop March 2018 
  BackTrackerService:  @local::standard_backtrackerservice 
  ParticleInventoryService: @local::standard_particleinventoryservice
}

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
  ### calwire producers
  caldataNEW:             @local::sbnd_calwire

  ### hit-finder producers
  gaushitNEW:             @local::sbnd_gaushitfinder

  ### cluster-finder producers
  lineclusterNEW:         @local::sbnd_linecluster

  ### pandora
  pandoraNEW:             @local::sbnd_pandora
  pandoraTrackNEW:        @local::sbnd_pandoraTrackCreation
  pandoraShowerNEW:       @local::sbnd_pandoraShowerCreation
  pandoraCaloNEW:         @local::sbnd_calomc                                        

 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [   
          caldataNEW,
          gaushitNEW,
          lineclusterNEW,
          pandoraNEW, 
          pandoraTrackNEW, 
          pandoraShowerNEW,
          pandoraCaloNEW
 ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
                @table::sbnd_rootoutput
   dataTier:    "reconstructed"
 }
}


### Here, we overwrite ALL module labels with the ones defined above.
physics.producers.caldataNEW.DigitModuleLabel:                    "daq"
physics.producers.gaushitNEW.CalDataModuleLabel:                  "caldataNEW"
physics.producers.lineclusterNEW.HitFinderModuleLabel:            "gaushitNEW"
physics.producers.pandoraNEW.HitFinderModuleLabel:                "lineclusterNEW"
physics.producers.pandoraTrackNEW.PFParticleLabel:                "pandoraNEW"
physics.producers.pandoraShowerNEW.PFParticleLabel:               "pandoraNEW"
physics.producers.pandoraCaloNEW.TrackModuleLabel:                "pandoraTrackNEW"   
physics.producers.pandoraCaloNEW.SpacePointModuleLabel:           "pandoraNEW"        

